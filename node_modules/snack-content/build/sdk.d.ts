import { SDKVersion, SDKFeature, SnackDependencies } from './types';
/**
 * Checks whether a specific module/dependency is preloaded for the given SDK version.
 */
export declare function isModulePreloaded(name: string, sdkVersion: SDKVersion, coreModulesOnly?: boolean): boolean;
/**
 * Returns the list of pre-loaded modules for the given SDK version.
 */
export declare function getPreloadedModules(sdkVersion: SDKVersion, coreModulesOnly?: boolean): {
    [name: string]: string;
};
export declare function validateSDKVersion(sdkVersion: SDKVersion): SDKVersion;
/**
 * Checks whether the module is deprecated for the given sdk-version and returns
 * the alternative module or error description instead. If the module is not deprecated
 * `undefined` is returned.
 */
export declare function getDeprecatedModule(name: string, sdkVersion: SDKVersion): string | undefined;
/**
 * Returns the list of supported SDK versions.
 */
export declare function getSupportedSDKVersions(): SDKVersion[];
/**
 * Verifies whether a string is a valid semver.
 */
export declare function isValidSemver(version: string): boolean;
/**
 * Checks whether a feature is supported by the given SDK version.
 */
export declare function isFeatureSupported(feature: SDKFeature, sdkVersion: string): boolean;
/**
 * Converts older dependency formats into the SnackDependencies type.
 */
export declare function standardizeDependencies(dependencies: any): SnackDependencies;
