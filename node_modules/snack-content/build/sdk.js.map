{"version":3,"file":"sdk.js","sourceRoot":"","sources":["../src/sdk.ts"],"names":[],"mappings":"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","sourcesContent":["import semver from 'semver';\n\nimport sdks from './sdks';\nimport features from './sdks/features';\nimport { SDKVersion, SDKFeature, SnackDependencies, SnackDependencyVersions } from './types';\n\n/**\n * Checks whether a specific module/dependency is preloaded for the given SDK version.\n */\nexport function isModulePreloaded(\n  name: string,\n  sdkVersion: SDKVersion,\n  coreModulesOnly?: boolean,\n): boolean {\n  const sdk = sdks[sdkVersion];\n  if (!sdk) return false;\n  return !!(sdk.coreModules[name] || (!coreModulesOnly && sdk.bundledModules[name]));\n}\n\n/**\n * Returns the list of pre-loaded modules for the given SDK version.\n */\nexport function getPreloadedModules(\n  sdkVersion: SDKVersion,\n  coreModulesOnly?: boolean,\n): { [name: string]: string } {\n  const sdk = sdks[sdkVersion];\n  if (!sdk) return {};\n  return coreModulesOnly\n    ? sdk.coreModules\n    : {\n        ...sdk.coreModules,\n        ...sdk.bundledModules,\n      };\n}\n\nexport function validateSDKVersion(sdkVersion: SDKVersion): SDKVersion {\n  if (Object.keys(sdks).indexOf(sdkVersion) < 0) {\n    throw new Error(\n      `Invalid SDKVersion, the following versions are supported: ${Object.keys(sdks)}`,\n    );\n  }\n  return sdkVersion;\n}\n\n/**\n * Checks whether the module is deprecated for the given sdk-version and returns\n * the alternative module or error description instead. If the module is not deprecated\n * `undefined` is returned.\n */\nexport function getDeprecatedModule(name: string, sdkVersion: SDKVersion): string | undefined {\n  return sdks[sdkVersion]?.deprecatedModules?.[name];\n}\n\n/**\n * Returns the list of supported SDK versions.\n */\nexport function getSupportedSDKVersions(): SDKVersion[] {\n  return Object.keys(sdks) as SDKVersion[];\n}\n\n/**\n * Verifies whether a string is a valid semver.\n */\nexport function isValidSemver(version: string): boolean {\n  return version === 'latest' || !!semver.validRange(version);\n}\n\n/**\n * Checks whether a feature is supported by the given SDK version.\n */\nexport function isFeatureSupported(feature: SDKFeature, sdkVersion: string): boolean {\n  const featureVersion = features[feature];\n  if (!featureVersion) {\n    throw new Error(\n      `Invalid SDKFeature, the following versions are supported: ${Object.keys(features)}`,\n    );\n  }\n  return semver.gte(sdkVersion, featureVersion);\n}\n\n/**\n * Converts older dependency formats into the SnackDependencies type.\n */\nexport function standardizeDependencies(dependencies: any): SnackDependencies {\n  let result: SnackDependencies = dependencies;\n  for (const name in dependencies) {\n    const dep = dependencies[name];\n    if (typeof dep === 'string') {\n      result = result === dependencies ? { ...dependencies } : result;\n      result[name] = {\n        version: dep,\n      };\n    } else if (typeof dep === 'object') {\n      const peerDependencies = standardizePeerDependencies(dep.peerDependencies);\n      if (dep.peerDependencies !== peerDependencies) {\n        result = result === dependencies ? { ...dependencies } : result;\n        result[name] = {\n          ...dep,\n          peerDependencies,\n        };\n      }\n    } else {\n      // Invalid dependency\n      result = result === dependencies ? { ...dependencies } : result;\n      delete result[name];\n    }\n  }\n  return result;\n}\n\n/**\n * @internal\n */\nfunction standardizePeerDependencies(peerDependencies: any): SnackDependencyVersions {\n  if (!peerDependencies) {\n    return peerDependencies;\n  }\n  let result: SnackDependencyVersions = peerDependencies;\n  for (const name in peerDependencies) {\n    const peerDep = peerDependencies[name];\n    if (typeof peerDep === 'string' || peerDep === null) {\n      // :thumbsup: regular peer-dependency\n    } else if (typeof peerDep === 'object' && typeof peerDep.version === 'string') {\n      result = result === peerDependencies ? { ...peerDependencies } : result;\n      result[name] = peerDep.version;\n    } else {\n      // Invalid peer-dependency\n      result = result === peerDependencies ? { ...peerDependencies } : result;\n      delete result[name];\n    }\n  }\n\n  return result;\n}\n"]}