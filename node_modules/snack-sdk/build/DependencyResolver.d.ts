import { SDKVersion, SnackDependencies, SnackMissingDependencies, SnackDependencyVersions } from 'snack-content';
import { Logger } from './Logger';
import { SnackError } from './types';
export declare type DependencyResolverCallback = (request: {
    name: string;
    version: string;
    sdkVersion: SDKVersion;
}, result?: any, error?: SnackError) => any;
export default class DependencyResolver {
    private snackagerURL;
    private logger?;
    private status;
    private callback;
    constructor(options: {
        snackagerURL: string;
        logger?: Logger;
        callback: DependencyResolverCallback;
    });
    add(name: string, version: string, sdkVersion: SDKVersion): Promise<any>;
    remove(name: string, version: string, _sdkVersion: string): void;
    waitForCompletion(): Promise<void>;
    private resolve;
}
export declare function getMissingDependencies(dependencies: SnackDependencies, sdkVersion: SDKVersion, wantedDependencyVersions?: SnackDependencyVersions): SnackMissingDependencies;
export declare function verifyDependency(name: string, version: string): SnackError | undefined;
export declare function getPackageName(name: string): string;
