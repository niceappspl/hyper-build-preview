{"version":3,"file":"Session.js","sourceRoot":"","sources":["../src/Session.ts"],"names":[],"mappings":"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","sourcesContent":["import mapValues from 'lodash/mapValues';\nimport nullthrows from 'nullthrows';\nimport {\n  SDKVersion,\n  SnackDependencies,\n  SnackDependency,\n  SnackFile,\n  SnackFiles,\n  isModulePreloaded,\n  validateSDKVersion,\n  SNACK_RUNTIME_URL_ENDPOINT,\n} from 'snack-content';\n\nimport DependencyResolver, {\n  DependencyResolverCallback,\n  verifyDependency,\n  getMissingDependencies,\n  getPackageName,\n} from './DependencyResolver';\nimport DevSession from './DevSession';\nimport FileUploader, { FileUploaderCallback } from './FileUploader';\nimport { Logger, createLogger } from './Logger';\nimport * as State from './State';\nimport { WantedDependencyVersions, WantedDependencyVersionsCallback } from './WantedVersions';\nimport defaultConfig, { SnackIdentityState } from './defaultConfig';\nimport {\n  createTransport,\n  SnackTransport,\n  SnackTransportEvent,\n  SnackTransportOptions,\n} from './transports';\nimport {\n  ProtocolIncomingMessage,\n  ProtocolOutgoingMessage,\n  ProtocolConsoleMessage,\n  ProtocolErrorMessage,\n  ProtocolReloadMessage,\n  ProtocolStatusMessage,\n  ProtocolRequestStatusMessage,\n} from './transports/Protocol';\nimport { createWebPlayerTransport, getWebPlayerIFrameURL } from './transports/webPlayer';\nimport {\n  SnackState,\n  SnackUser,\n  SnackSendBeaconRequest,\n  SnackLogEvent,\n  SnackListenerSubscription,\n  SnackConnectedClients,\n  SnackWindowRef,\n} from './types';\nimport { createChannel, fetch, createURL, createError, createUserHeader } from './utils';\n\nexport type SnackOptions = {\n  sdkVersion?: SDKVersion;\n  name?: string;\n  description?: string;\n  dependencies?: SnackDependencies;\n  files?: SnackFiles;\n  apiURL?: string;\n  snackpubURL?: string;\n  runtimeEndpoint?: string;\n  snackagerURL?: string;\n  verbose?: boolean;\n  disabled?: boolean;\n  online?: boolean;\n  channel?: string; // Will be randomly generated if not provided\n  deviceId?: string;\n  transports?: { [id: string]: SnackTransport };\n  createTransport?: (options: SnackTransportOptions) => SnackTransport;\n  codeChangesDelay?: number;\n  reloadTimeout?: number;\n  previewTimeout?: number;\n  user?: SnackUser;\n  id?: string;\n  snackId?: string;\n  accountSnackId?: string;\n  webPlayerURL?: string;\n  webPreviewRef?: SnackWindowRef;\n};\n\nexport type SnackSaveOptions = {\n  isDraft?: boolean;\n  ignoreUser?: boolean;\n};\n\nexport type SnackStateListener = (state: SnackState, prevState: SnackState) => any;\nexport type SnackLogListener = (log: SnackLogEvent) => any;\n\nexport default class Snack {\n  private state: SnackState;\n  private stateListeners: Set<SnackStateListener> = new Set();\n  private logListeners: Set<SnackLogListener> = new Set();\n  private readonly options: SnackOptions;\n  private readonly createTransport: (options: SnackTransportOptions) => SnackTransport;\n  private readonly logger?: Logger;\n  private readonly apiURL: string;\n  private readonly snackpubURL: string | undefined;\n  private readonly runtimeEndpoint: string;\n  private readonly dependencyResolver: DependencyResolver;\n  private readonly fileUploader: FileUploader;\n  private readonly DevSession: DevSession;\n  private wantedDependencyVersions: WantedDependencyVersions;\n  private codeChangesDelay: number;\n  private codeChangesTimer: any;\n  private readonly reloadTimeout: number;\n  private readonly previewTimeout: number;\n  private pruneConnectionsTimer: any;\n  private readonly transportListeners: {\n    [key: string]: (event: any) => void;\n  } = {};\n\n  constructor(options: SnackOptions) {\n    const channel = createChannel(options.channel);\n    const sdkVersion = validateSDKVersion(options.sdkVersion ?? defaultConfig.sdkVersion);\n    const dependencies = options.dependencies ? { ...options.dependencies } : {};\n    this.options = options;\n    this.apiURL = options.apiURL ?? defaultConfig.apiURL;\n    this.snackpubURL = options.snackpubURL ?? defaultConfig.snackpubURL;\n    this.runtimeEndpoint = options.runtimeEndpoint ?? SNACK_RUNTIME_URL_ENDPOINT;\n    this.logger = options.verbose ? createLogger(true) : undefined;\n    this.codeChangesDelay = options.codeChangesDelay ?? 0;\n    this.reloadTimeout = options.reloadTimeout ?? 0;\n    this.previewTimeout = options.previewTimeout ?? 10000;\n    this.createTransport = options.createTransport ?? createTransport;\n    const webPlayerURL = options.webPlayerURL ?? defaultConfig.webPlayerURL;\n\n    let transports = options.transports ?? {};\n    if (options.online) {\n      transports = State.addObject(\n        transports,\n        'pubsub',\n        this.createTransport({\n          name: 'pubsub',\n          channel,\n          verbose: options.verbose,\n          apiURL: this.apiURL,\n          snackpubURL: this.snackpubURL,\n        }),\n      );\n    }\n    if (options.webPreviewRef) {\n      transports = State.addObject(\n        transports,\n        'webplayer',\n        createWebPlayerTransport({\n          ref: options.webPreviewRef,\n          verbose: options.verbose,\n          window: nullthrows(typeof window !== 'undefined' ? window : (global as any)),\n          webPlayerURL,\n        }),\n      );\n    }\n\n    this.state = this.updateDerivedState(\n      {\n        disabled: !!options.disabled,\n        unsaved: false,\n        name: options.name ?? '',\n        description: options.description ?? '',\n        sdkVersion,\n        files: options.files ?? {},\n        dependencies,\n        missingDependencies: getMissingDependencies(dependencies, sdkVersion),\n        connectedClients: {},\n        transports,\n        user: options.user,\n        id: options.id,\n        saveURL: options.id\n          ? createURL(this.runtimeEndpoint, sdkVersion, undefined, options.id)\n          : undefined,\n        savedSDKVersion: options.id ? sdkVersion : undefined,\n        online: false,\n        url: createURL(this.runtimeEndpoint, sdkVersion, channel, options.id),\n        channel,\n        deviceId: options.deviceId,\n        snackId: options.snackId,\n        accountSnackId: options.accountSnackId,\n        webPlayerURL,\n      },\n      SnackIdentityState,\n    );\n    this.state.unsaved = false;\n\n    this.wantedDependencyVersions = new WantedDependencyVersions({\n      apiUrl: this.apiURL,\n      logger: this.logger,\n      callback: this.onWantedDependencyVersions,\n    });\n    this.dependencyResolver = new DependencyResolver({\n      snackagerURL: options.snackagerURL ?? defaultConfig.snackagerURL,\n      logger: this.logger,\n      callback: this.onDependencyResolved,\n    });\n    this.fileUploader = new FileUploader({\n      apiURL: this.apiURL,\n      logger: this.logger,\n      callback: this.onFileUploaded,\n    });\n    this.DevSession = new DevSession({\n      apiURL: this.apiURL,\n      logger: this.logger,\n      onSendBeaconCloseRequest: this.onDevSessionSendBeaconCloseRequest,\n    });\n    this.logger?.info('Snack created', this.getState());\n    this.onStateChanged(this.state, SnackIdentityState);\n  }\n\n  //\n  // Content\n  //\n\n  /**\n   * Sets the Expo SDK version.\n   * @param sdkVersion Valid SDK version (e.g. \"38.0.0\")\n   */\n  setSDKVersion(sdkVersion: SDKVersion) {\n    validateSDKVersion(sdkVersion);\n    return this.setState((state) =>\n      state.sdkVersion !== sdkVersion\n        ? {\n            sdkVersion,\n            missingDependencies: getMissingDependencies(\n              state.dependencies,\n              sdkVersion,\n              state.wantedDependencyVersions,\n            ),\n          }\n        : null,\n    );\n  }\n\n  /**\n   * Sets the name of the Snack.\n   * @param name E.g. \"conspicious orange\"\n   */\n  setName(name: string) {\n    return this.setState((state) => (state.name !== name ? { name } : null));\n  }\n\n  /**\n   * Sets the description of the Snack.\n   * @param name E.g. \"My awesome Snack\"\n   */\n  setDescription(description: string) {\n    return this.setState((state) => (state.description !== description ? { description } : null));\n  }\n\n  /**\n   * Sets the associated user account.\n   *\n   * When set and `online` is true, causes this Snack to appear on the\n   * \"Recently in Development\" section of all Expo clients that are signed\n   * in with that account.\n   */\n  setUser(user?: SnackUser) {\n    return this.setState((state) => (state.user !== user ? { user } : null));\n  }\n\n  /**\n   * Sets the device-id of an Expo client. When set and `online` is true, causes this\n   * Snack to appear on the \"Recently in Development\" section of that Expo client.\n   */\n  setDeviceId(deviceId?: string) {\n    return this.setState((state) => (state.deviceId !== deviceId ? { deviceId } : null));\n  }\n\n  /**\n   * Sets the focus to this Snack.\n   *\n   * Causes this Snack to be moved to the top of the \"Recently in Development\" list\n   * in the Expo client.\n   */\n  setFocus() {\n    this.DevSession.setFocus(this.state);\n  }\n\n  /**\n   * Sets the delay that is used before sending code updates to the connected clients.\n   * Use this method to set the \"debounce\" timeout to use for sending code changes\n   * over pubsub.\n   *\n   * ```\n   *   -1 = Disable automatic sending of code changes (use `sendCodeChanges` to trigger the send)\n   *    0 = Code changes are sent immediately to the connected clients\n   * 1..n = Code changes are debounced and sent after the wait time\n   * ```\n   *\n   * @param delay Timeout in milliseconds (or -1 to disable automatic code updates)\n   */\n  setCodeChangesDelay(delay: number) {\n    if (this.codeChangesDelay !== delay) {\n      this.codeChangesDelay = delay;\n      this._sendCodeChangesDebounced(this.state);\n    }\n  }\n\n  /**\n   * Update the `webPlayerURL` which serves the webPlayer runtime.\n   */\n  setWebPlayerURL(webPlayerURL: string | null) {\n    this.setState((state) => {\n      const newWebPlayerURL = webPlayerURL ?? defaultConfig.webPlayerURL;\n      if (state.webPlayerURL !== newWebPlayerURL && this.options.webPreviewRef) {\n        let { transports } = state;\n        transports = State.addObject(\n          transports,\n          'webplayer',\n          createWebPlayerTransport({\n            ref: this.options.webPreviewRef,\n            verbose: this.options.verbose,\n            window: nullthrows(typeof window !== 'undefined' ? window : (global as any)),\n            webPlayerURL: newWebPlayerURL,\n          }),\n        );\n        return { webPlayerURL: newWebPlayerURL, transports };\n      }\n      return null;\n    });\n  }\n\n  /**\n   * Sends any pending code changes to the connected clients.\n   * No changes are send if all clients are already up to date.\n   */\n  sendCodeChanges() {\n    this._sendCodeChangesDebounced(this.state, true);\n  }\n\n  private _sendCodeChangesDebounced(state: SnackState, immediate?: boolean) {\n    // Clear the debounce timer\n    if (this.codeChangesTimer) {\n      clearTimeout(this.codeChangesTimer);\n      this.codeChangesTimer = undefined;\n    }\n\n    // Schedule debounced update\n    if (!immediate && this.codeChangesDelay > 0) {\n      this.codeChangesTimer = setTimeout(\n        () => this._sendCodeChangesDebounced(state, true),\n        this.codeChangesDelay,\n      );\n      return;\n    } else if (!immediate && this.codeChangesDelay < 0) {\n      return;\n    }\n\n    // Send the changes\n    const { transports, files, dependencies, sdkVersion } = state;\n    for (const key in transports) {\n      transports[key].postMessage({\n        type: 'update_code',\n        data: {\n          files,\n          dependencies,\n          sdkVersion,\n        },\n      });\n    }\n  }\n\n  //\n  // Save\n  //\n\n  /**\n   * Uploads the current code to Expo's servers and return a url that points to that version of the code.\n   */\n  async saveAsync(options?: SnackSaveOptions) {\n    const prevState = this.state;\n\n    // Wait for any pending asset uploads the complete before saving\n    await this.fileUploader.waitForCompletion();\n\n    const { name, description, sdkVersion, files, dependencies, user } = this.state;\n\n    try {\n      const payload: any = {\n        manifest: {\n          sdkVersion,\n          name,\n          description,\n          dependencies: mapValues(dependencies, (dep) => dep.version),\n        },\n        code: mapValues(files, (file: any) => {\n          file = { ...file };\n          delete file.error;\n          return file;\n        }),\n        dependencies: mapValues(dependencies, (dep) => {\n          dep = { ...dep };\n          delete dep.error;\n          return dep;\n        }),\n        isDraft: options?.isDraft ?? false,\n      };\n\n      this.logger?.info('Saving...', payload);\n\n      const previewPromise = this.getPreviewAsync();\n\n      const url = `${this.apiURL}/--/api/v2/snack/save`;\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        headers: {\n          'Content-Type': 'application/json',\n          ...(options?.ignoreUser ? {} : createUserHeader(user)),\n        },\n      });\n      const data = await response.json();\n      if (!data?.id) {\n        throw new Error(data.errors?.[0]?.message || 'Failed to save');\n      }\n\n      this.logger?.info('Saved', data);\n\n      const id: string = data.id;\n      const saveURL = createURL(this.runtimeEndpoint, sdkVersion, undefined, id);\n      const hashId: string | undefined = data.hashId;\n      const accountSnackId: string | undefined = data.accountSnackId;\n      const snackId: string | undefined = data.snackId;\n\n      this.setState((state) => ({\n        id,\n        saveURL,\n        unsaved: State.isUnsaved(state, prevState),\n        savedSDKVersion:\n          options?.isDraft && state.savedSDKVersion ? state.savedSDKVersion : sdkVersion,\n        accountSnackId,\n        snackId,\n      }));\n\n      previewPromise.then((connectedClients) => {\n        const conns = Object.values(connectedClients)\n          .filter((c) => c.previewURL)\n          .sort((a, b) => (a.previewTimestamp ?? 0) - (b.previewTimestamp ?? 0));\n        if (conns.length) {\n          this.uploadPreview(id, conns[0].previewURL as string, conns[0].status !== 'error');\n        }\n      });\n\n      return {\n        id,\n        url: saveURL,\n        hashId,\n        accountSnackId,\n        snackId,\n      };\n    } catch (e) {\n      this.logger?.error(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Gets the URL at which the Snack can be downloaded as a zip file. Will automatically\n   * save the Snack if it contains unsaved changes.\n   */\n  async getDownloadURLAsync(saveOptions?: SnackSaveOptions) {\n    await this.fileUploader.waitForCompletion();\n    let state = this.getState();\n    if (!state.id || state.unsaved) {\n      await this.saveAsync(saveOptions);\n      state = this.getState();\n    }\n    return `${this.apiURL}/--/api/v2/snack/download/${state.id}`;\n  }\n\n  private async uploadPreview(id: string, previewURL: string, status: boolean) {\n    const url = `${this.apiURL}/--/api/v2/snack/updateMetadata`;\n    const payload = {\n      id,\n      previewLocation: previewURL,\n      status: status ? 'SUCCESS' : 'FAILURE',\n    };\n    this.logger?.info('Uploading preview...', payload);\n\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(payload),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (data.id) {\n        this.logger?.info('Uploaded preview', data);\n      } else {\n        throw new Error(data.errors?.[0]?.message ?? 'Unknown error');\n      }\n    } catch (e) {\n      this.logger?.error('Failed to upload preview', e);\n    }\n  }\n\n  //\n  // State\n  //\n\n  /**\n   * Returns the current state of the Snack. This includes files, dependencies\n   * and other meta-data about the Snack.\n   */\n  getState(): SnackState {\n    return this.state;\n  }\n\n  /**\n   * Waits for any pending operations such as running dependencies resolutions\n   * before returning the state.\n   */\n  async getStateAsync() {\n    await this.wantedDependencyVersions.waitForCompletion();\n    await this.dependencyResolver.waitForCompletion();\n    await this.fileUploader.waitForCompletion();\n    return this.getState();\n  }\n\n  /**\n   * Adds a callback for listening for any state changes.\n   *\n   * @example\n   * ```\n   * const unsubscribe = Snack.addStateListener((state, prevState) => {\n   *   if (state.name !== prevState.name) {\n   *     console.log('name changed: ', state.name);\n   *   }\n   * });\n   *\n   * Snack.setName('unforgiven orange'); // // Make a change to the state\n   *\n   * unsubscribe(); // Remove listener\n   * ```\n   */\n  addStateListener(listener: SnackStateListener): SnackListenerSubscription {\n    this.stateListeners.add(listener);\n    return () => this.stateListeners.delete(listener);\n  }\n\n  private setState(stateFn: (state: SnackState) => any) {\n    const update = stateFn(this.state);\n    if (update) {\n      const oldState = this.state;\n      const newState: SnackState = {\n        ...oldState,\n        ...update,\n      };\n      this.state = this.updateDerivedState(newState, oldState);\n      this.onStateChanged(newState, oldState);\n      this.stateListeners.forEach((listener) => listener(newState, oldState));\n    }\n  }\n\n  private updateDerivedState(state: SnackState, prevState: SnackState): SnackState {\n    // Set unsaved to true whenever files or dependencies change\n    state.unsaved = state.unsaved || State.isUnsaved(state, prevState);\n\n    // Update other derived states\n    this.updateDerivedOnlineState(state, prevState);\n    this.updateDerivedDependenciesState(state, prevState);\n    this.updateDerivedWebPreviewState(state, prevState);\n\n    return state;\n  }\n\n  private onStateChanged(state: SnackState, prevState: SnackState) {\n    this.updateWantedDependencyVersions(state, prevState);\n    this.updateDependencyResolver(state, prevState);\n    this.updateFileUploader(state, prevState);\n    this.updateTransports(state, prevState);\n    this.DevSession.setState(state, prevState);\n  }\n\n  //\n  // Files (code & assets)\n  //\n\n  /**\n   * Updates code or asset files.\n   *\n   * Use this method to add/remove/update files and upload assets.\n   * To remove a file specify `null` as the value of the file.\n   *\n   * @example\n   * ```ts\n   * const Snack = new Snack({\n   *   files: {\n   *     'App.js': { type: 'CODE', contents: 'console.log(\"hello world!\");' },\n   *     'data.json': { type: 'CODE', contents: '{}' },\n   *   }\n   * });\n   *\n   * // Add or update files\n   * Snack.updateFiles({\n   *   'App.js': {\n   *     type: 'CODE',\n   *     contents: 'console.log(\"Hello Snack!\");'\n   *   }\n   * });\n   *\n   * // Upload an asset\n   * Snack.updateFiles({\n   *   'assets/logo.png': {\n   *     type: 'ASSET',\n   *     contents: file // File, Blob or FormData\n   *   }\n   * });\n   *\n   * // Add a pre-uploaded asset\n   * Snack.updateFiles({\n   *   'assets/expo.jpg': {\n   *     type: 'ASSET',\n   *     contents: 'https://mysite/expo.jpg'\n   *   }\n   * });\n   *\n   * // Remove files\n   * Snack.updateFiles({\n   *   'data.json': null,\n   *   'assets/expo.jpg': null\n   * });\n   * ```\n   */\n  updateFiles(files: { [path: string]: SnackFile | null }) {\n    return this.setState((state) => {\n      const newFiles = State.updateObjects(state.files, files);\n      return newFiles !== state.files ? { files: newFiles } : null;\n    });\n  }\n\n  /**\n   * Helper function that uploads an asset and returns its url.\n   */\n  uploadAssetAsync = async (contents: File | Blob | FormData): Promise<string> => {\n    let url: string = '';\n    const fileUploader = new FileUploader({\n      apiURL: this.apiURL,\n      logger: this.logger,\n      callback: (_request, resultURL, error) => {\n        if (error) {\n          throw error;\n        } else if (resultURL) {\n          url = resultURL;\n        }\n      },\n    });\n    fileUploader.add('asset', {\n      type: 'ASSET',\n      contents,\n    });\n    await fileUploader.waitForCompletion();\n    return url;\n  };\n\n  private updateFileUploader(state: SnackState, prevState: SnackState) {\n    const files = state.files;\n    const prevFiles = prevState.files;\n\n    // Stop uploading any removed or changed assets\n    if (!prevState.disabled && ((!state.disabled && files !== prevFiles) || state.disabled)) {\n      for (const path in prevFiles) {\n        if (!files[path] || files[path].contents !== prevFiles[path].contents || state.disabled) {\n          this.fileUploader.remove(path, prevFiles[path]);\n        }\n      }\n    }\n\n    // Start uploading any new or changed assets, or when the error is cleared\n    if (!state.disabled && (files !== prevFiles || prevState.disabled)) {\n      for (const path in files) {\n        const file = files[path];\n        if (\n          file.type === 'ASSET' &&\n          typeof file.contents === 'object' &&\n          !file.error &&\n          (prevFiles[path]?.contents !== file.contents || prevState.disabled)\n        ) {\n          this.fileUploader.add(path, file);\n        }\n      }\n    }\n  }\n\n  private onFileUploaded: FileUploaderCallback = (request, resultURL, error) => {\n    // When a file has been uploaded, store its url in the state. This state should be persisted\n    // by the client so that the next time it doesn't need to be uploaded again.\n    this.setState(({ files }) => ({\n      files: State.addObject(files, request.path, {\n        ...request.file,\n        ...(resultURL ? { contents: resultURL } : {}),\n        ...(error ? { error } : {}),\n      }),\n    }));\n  };\n\n  //\n  // Dependencies\n  //\n\n  /**\n   * Updates dependencies.\n   *\n   * Use this method to add/remove/update dependencies.\n   * To remove a dependency specify `null` as the value of the key/value pair.\n   *\n   * @example\n   * ```ts\n   * const Snack = new Snack({\n   *   dependencies: {\n   *     'react-native-paper': '~2.0.0'\n   *   }\n   * });\n   *\n   * // Add dependency\n   * Snack.updateDependencies({\n   *   'expo-font': '9.0.0'\n   * });\n   *\n   * // Remove dependency\n   * Snack.updateDependencies({\n   *   'expo-font': null\n   * });\n   * ```\n   */\n  updateDependencies(dependencies: { [name: string]: SnackDependency | null }) {\n    return this.setState((state) => {\n      const newDependencies = State.updateObjects(state.dependencies, dependencies);\n      return newDependencies !== state.dependencies\n        ? {\n            dependencies: newDependencies,\n            missingDependencies: getMissingDependencies(\n              newDependencies,\n              state.sdkVersion,\n              state.wantedDependencyVersions,\n            ),\n          }\n        : null;\n    });\n  }\n\n  private updateDerivedDependenciesState(state: SnackState, prevState: SnackState) {\n    if (\n      state.wantedDependencyVersions !== prevState.wantedDependencyVersions ||\n      state.dependencies !== prevState.dependencies\n    ) {\n      for (const name in state.dependencies) {\n        const dep = state.dependencies[name];\n        const wantedVersion =\n          state.wantedDependencyVersions?.[name] ??\n          state.wantedDependencyVersions?.[getPackageName(name)] ??\n          undefined;\n        if (dep.wantedVersion !== wantedVersion) {\n          state.dependencies =\n            state.dependencies === prevState.dependencies\n              ? { ...state.dependencies }\n              : state.dependencies;\n          const version =\n            (dep.version === '*' || (dep.wantedVersion && dep.version === dep.wantedVersion)) &&\n            wantedVersion\n              ? wantedVersion\n              : dep.version;\n          state.dependencies[name] = {\n            ...dep,\n            version,\n            wantedVersion,\n          };\n          if (dep.handle && dep.version !== version) {\n            delete state.dependencies[name].handle;\n          }\n        }\n      }\n    }\n\n    if (state.dependencies !== prevState.dependencies) {\n      for (const name in state.dependencies) {\n        const dep = state.dependencies[name];\n        if (dep !== prevState.dependencies[name]) {\n          const error = verifyDependency(name, dep.version);\n          if (error) {\n            state.dependencies[name] = {\n              ...dep,\n              error,\n            };\n          }\n        }\n      }\n    }\n  }\n\n  private updateWantedDependencyVersions(state: SnackState, _prevState: SnackState) {\n    if (!state.disabled && Object.keys(state.dependencies).length) {\n      this.wantedDependencyVersions.setSDKVersion(state.sdkVersion);\n    }\n  }\n\n  private onWantedDependencyVersions: WantedDependencyVersionsCallback = (\n    _sdkVersion,\n    result,\n    error,\n  ) => {\n    const wantedDependencyVersions = error ? {} : result;\n    this.setState(({ dependencies, sdkVersion }) => ({\n      wantedDependencyVersions,\n      missingDependencies: getMissingDependencies(\n        dependencies,\n        sdkVersion,\n        wantedDependencyVersions,\n      ),\n    }));\n  };\n\n  private updateDependencyResolver(state: SnackState, prevState: SnackState) {\n    const dependencies = state.dependencies;\n    const prevDependencies = prevState.dependencies;\n\n    // Stop resolving any removed or changed dependencies\n    if (\n      !prevState.disabled &&\n      (dependencies !== prevDependencies ||\n        state.disabled ||\n        state.sdkVersion !== prevState.sdkVersion)\n    ) {\n      for (const name in prevDependencies) {\n        if (\n          !dependencies[name] ||\n          dependencies[name].version !== prevDependencies[name].version ||\n          state.disabled ||\n          (isModulePreloaded(name, state.sdkVersion) &&\n            !isModulePreloaded(name, prevState.sdkVersion))\n        ) {\n          this.dependencyResolver.remove(\n            name,\n            prevDependencies[name].version,\n            prevState.sdkVersion,\n          );\n        }\n      }\n    }\n\n    // Add any still unresolved dependencies to the dependency resolver\n    if (\n      !state.disabled &&\n      (dependencies !== prevDependencies ||\n        prevState.disabled ||\n        state.sdkVersion !== prevState.sdkVersion ||\n        state.wantedDependencyVersions !== prevState.wantedDependencyVersions)\n    ) {\n      for (const name in dependencies) {\n        const dependency = dependencies[name];\n        if (\n          !dependency.handle &&\n          !dependency.error &&\n          !isModulePreloaded(name, state.sdkVersion) &&\n          !(dependency.version === '*' && !state.wantedDependencyVersions) &&\n          (prevDependencies[name]?.version !== dependency.version ||\n            (dependency.version === '*' && !prevState.wantedDependencyVersions) ||\n            prevDependencies[name]?.handle ||\n            prevDependencies[name]?.error ||\n            prevState.disabled)\n        ) {\n          this.dependencyResolver.add(name, dependency.version, state.sdkVersion);\n        }\n      }\n    }\n  }\n\n  private onDependencyResolved: DependencyResolverCallback = (request, result, error) => {\n    // When a dependency is resolved, store its handle and peer-dependencies\n    // in the state. This state should be persisted by the client so that the next\n    // time it doesn't need to be resolved again.\n    this.setState(({ dependencies, sdkVersion, wantedDependencyVersions }) => {\n      const newDependencies = State.addObject(dependencies, request.name, {\n        ...dependencies[request.name],\n        version: request.version,\n        ...(result\n          ? {\n              handle: result.handle,\n              peerDependencies: result.dependencies,\n            }\n          : {}),\n        ...(error ? { error } : {}),\n      });\n      return newDependencies !== dependencies\n        ? {\n            dependencies: newDependencies,\n            missingDependencies: getMissingDependencies(\n              newDependencies,\n              sdkVersion,\n              wantedDependencyVersions,\n            ),\n          }\n        : null;\n    });\n  };\n\n  //\n  // Online\n  //\n\n  /**\n   * Enables or disables the Snack.\n   *\n   * When disabled, no uploads or dependency resolve operations\n   * are performed.\n   */\n  setDisabled(disabled: boolean) {\n    return this.setState((state) => (disabled !== state.disabled ? { disabled } : null));\n  }\n\n  /**\n   * Makes the Snack available online.\n   *\n   * When online, a pubsub channel is created to which clients can\n   * connect.\n   */\n  setOnline(enabled: boolean) {\n    return this.setState((state) => {\n      if (enabled && !state.transports['pubsub']) {\n        return {\n          transports: State.addObject(\n            state.transports,\n            'pubsub',\n            this.createTransport({\n              name: 'pubsub',\n              apiURL: this.apiURL,\n              snackpubURL: this.snackpubURL,\n              channel: state.channel,\n              verbose: !!this.logger,\n            }),\n          ),\n        };\n      } else if (!enabled && state.transports['pubsub']) {\n        let connectedClients = state.connectedClients;\n        for (const key in state.connectedClients) {\n          if (state.connectedClients[key].transport === 'pubsub') {\n            connectedClients = State.removeObject(connectedClients, key);\n          }\n        }\n        return {\n          transports: State.removeObject(state.transports, 'pubsub'),\n          connectedClients,\n        };\n      } else {\n        return null;\n      }\n    });\n  }\n\n  private updateDerivedOnlineState(state: SnackState, prevState: SnackState) {\n    const { transports, sdkVersion, channel, id, name, disabled, savedSDKVersion } = state;\n    if (\n      transports !== prevState.transports ||\n      sdkVersion !== prevState.sdkVersion ||\n      channel !== prevState.channel ||\n      id !== prevState.id ||\n      name !== prevState.name ||\n      savedSDKVersion !== prevState.savedSDKVersion\n    ) {\n      state.online = !!transports['pubsub'] && !disabled;\n      state.url = createURL(\n        this.runtimeEndpoint,\n        sdkVersion,\n        channel,\n        savedSDKVersion && savedSDKVersion !== sdkVersion ? undefined : id,\n      );\n      state.onlineName = `${name || 'Unnamed Snack'}`;\n    }\n  }\n\n  private updateDerivedWebPreviewState(state: SnackState, prevState: SnackState) {\n    const { transports, sdkVersion, url, webPlayerURL } = state;\n    if (\n      (url && !prevState.url) ||\n      sdkVersion !== prevState.sdkVersion ||\n      webPlayerURL !== prevState.webPlayerURL\n    ) {\n      state.webPreviewURL =\n        transports['webplayer'] && webPlayerURL\n          ? getWebPlayerIFrameURL(webPlayerURL, sdkVersion, url, !!this.logger)\n          : undefined;\n    }\n  }\n\n  private onDevSessionSendBeaconCloseRequest = (sendBeaconCloseRequest: SnackSendBeaconRequest) => {\n    this.setState((_state) => ({\n      sendBeaconCloseRequest,\n    }));\n  };\n\n  //\n  // Transports\n  //\n\n  /**\n   * Reloads all connected clients.\n   *\n   * Note: During the reload proces, clients may get disconnected which\n   * causes the connectedClient to disappear and re-appear. The `reloadTimeout`\n   * option in the constructor can be used to keep connectedClients \"alive\"\n   * during the reload process.\n   */\n  reloadConnectedClients() {\n    const connectedTransports = new Set<SnackTransport>();\n    this.setState((state) => {\n      let { connectedClients } = state;\n      for (const key in state.connectedClients) {\n        const connectedClient = state.connectedClients[key];\n        connectedTransports.add(state.transports[connectedClient.transport]);\n        connectedClients = State.addObject(connectedClients, key, {\n          ...connectedClient,\n          status: 'reloading',\n        });\n      }\n      return connectedClients !== state.connectedClients ? { connectedClients } : null;\n    });\n    const reloadMessage: ProtocolReloadMessage = {\n      type: 'RELOAD_SNACK',\n    };\n    if (connectedTransports.size) {\n      this.logger?.comm('Reloading...');\n      connectedTransports.forEach((transport) => {\n        transport.postMessage({\n          type: 'protocol_message',\n          data: reloadMessage,\n        });\n      });\n    }\n  }\n\n  /**\n   * Requests a preview from the connected clients.\n   *\n   * The previews are returned in the `previewURL` field of each connectedClient.\n   */\n  getPreviewAsync(): Promise<SnackConnectedClients> {\n    const { connectedClients, transports } = this.state;\n    const connectedTransports = new Set<SnackTransport>();\n    Object.values(connectedClients).forEach(({ transport }) =>\n      connectedTransports.add(transports[transport]),\n    );\n    if (!connectedTransports.size) {\n      return Promise.resolve(connectedClients);\n    }\n\n    // Send status request to all transports that have\n    // active connectedClients.\n    const requestStatusMessage: ProtocolRequestStatusMessage = {\n      type: 'REQUEST_STATUS',\n    };\n    if (connectedTransports.size) {\n      this.logger?.comm('Requesting preview...');\n      connectedTransports.forEach((transport) => {\n        transport.postMessage({\n          type: 'protocol_message',\n          data: requestStatusMessage,\n        });\n      });\n    }\n\n    // Wait for all status-reports to be received and\n    // return the connectedClients state when done.\n    // Or timeout when it takes too long...\n    return new Promise<SnackConnectedClients>((resolve, reject) => {\n      let timeoutTimer: any;\n      const completedConnections = new Set<string>();\n      const unsubscribe = this.addStateListener((state, prevState) => {\n        if (state.connectedClients !== prevState.connectedClients) {\n          for (const key in connectedClients) {\n            if (\n              connectedClients[key].previewTimestamp !==\n                state.connectedClients[key]?.previewTimestamp ||\n              !state.connectedClients[key]\n            ) {\n              completedConnections.add(key);\n              if (completedConnections.size === Object.values(connectedClients).length) {\n                unsubscribe();\n                clearTimeout(timeoutTimer);\n                resolve(state.connectedClients);\n                return;\n              }\n            }\n          }\n        }\n      });\n\n      timeoutTimer = setTimeout(() => {\n        unsubscribe();\n        reject(new Error('Operation timed out'));\n      }, this.previewTimeout);\n    });\n  }\n\n  private updateTransports(state: SnackState, prevState: SnackState) {\n    const transports = state.transports;\n    const prevTransports = prevState.transports;\n\n    // Stop any any removed transports\n    if (!prevState.disabled && (transports !== prevTransports || state.disabled)) {\n      for (const id in prevTransports) {\n        if (\n          this.transportListeners[id] &&\n          (transports[id] !== prevTransports[id] || state.disabled)\n        ) {\n          prevTransports[id].removeEventListener('message', this.transportListeners[id]);\n          delete this.transportListeners[id];\n          prevTransports[id].postMessage({ type: 'stop' });\n        }\n      }\n    }\n\n    // Start any added transports\n    if (!state.disabled && (transports !== prevTransports || prevState.disabled)) {\n      for (const id in transports) {\n        if (\n          !this.transportListeners[id] &&\n          (transports[id] !== prevTransports[id] || prevState.disabled)\n        ) {\n          this.transportListeners[id] = (event: any) => this.onTransportEvent(id, event);\n          transports[id].addEventListener('message', this.transportListeners[id]);\n          transports[id].postMessage({ type: 'start' });\n        }\n      }\n    }\n\n    // Update the code\n    if (\n      !state.disabled &&\n      !State.isBusy(state) &&\n      (transports !== prevTransports || State.isCodeChanged(state, prevState) || prevState.disabled)\n    ) {\n      this._sendCodeChangesDebounced(\n        state,\n        prevTransports !== transports || (!State.isBusy(state) && State.isBusy(prevState)),\n      );\n    }\n  }\n\n  private onTransportEvent = (transport: string, event: SnackTransportEvent) => {\n    const { type, data } = event;\n    // @ts-ignore\n    const { connectionId } = event;\n    switch (type) {\n      case 'connect':\n        this.logger?.comm(`Client connected (${transport})`, connectionId);\n        this.onClientConnected(transport, connectionId, data);\n        break;\n      case 'disconnect':\n        this.logger?.comm(`Client disconnected (${transport})`, connectionId, data);\n        this.onClientDisconnected(transport, connectionId, data);\n        break;\n      case 'protocol_message':\n        this.logger?.comm_recv(`Message received (${transport})`, connectionId, data);\n        this.onProtocolMessageReceived(transport, connectionId, event.data);\n        break;\n      case 'send_message':\n        this.onProtocolMessageSent(transport, event.data);\n        break;\n    }\n  };\n\n  private onClientConnected(transport: string, connectedClientId: string, data: any) {\n    this.setState((state) => {\n      return {\n        connectedClients: State.addObject(state.connectedClients, connectedClientId, {\n          transport,\n          id: data.id,\n          name: data.name,\n          platform: data.platform,\n          status: 'ok',\n        }),\n      };\n    });\n  }\n\n  private onClientDisconnected(_transport: string, connectedClientId: string, _data: any) {\n    this.setState((state) => {\n      const connectedClient = state.connectedClients[connectedClientId];\n\n      // When the connectedClient is reloading, schedule a cleanup\n      // in case the connectedClient does not return\n      if (connectedClient?.status === 'reloading' && this.reloadTimeout >= 0) {\n        if (this.pruneConnectionsTimer) {\n          clearTimeout(this.pruneConnectionsTimer);\n          this.pruneConnectionsTimer = undefined;\n        }\n        this.pruneConnectionsTimer = setTimeout(() => {\n          this.pruneConnectionsTimer = undefined;\n          this.setState((state) => {\n            let connectedClients = state.connectedClients;\n            for (const key in state.connectedClients) {\n              if (state.connectedClients[key].status === 'reloading') {\n                connectedClients = State.removeObject(connectedClients, key);\n              }\n            }\n            return connectedClients !== state.connectedClients ? { connectedClients } : null;\n          });\n        }, this.reloadTimeout);\n        return null;\n      } else {\n        // Otherwise, remove the connectedClient immediately\n        const connectedClients = State.removeObject(state.connectedClients, connectedClientId);\n        return connectedClients !== state.connectedClients ? { connectedClients } : null;\n      }\n    });\n  }\n\n  //\n  // Messaging\n  //\n\n  /**\n   * Adds a callback for listening for any client generated log messages.\n   *\n   * @example\n   * ```\n   * const unsubscribe = Snack.addLogListener((log) => {\n   *   console.log('log message received: ', log);\n   * });\n   *\n   * unsubscribe(); // Remove listener\n   * ```\n   */\n  addLogListener(listener: SnackLogListener): SnackListenerSubscription {\n    this.logListeners.add(listener);\n    return () => this.logListeners.delete(listener);\n  }\n\n  private onProtocolMessageReceived(\n    transport: string,\n    connectedClientId: string,\n    message: ProtocolIncomingMessage,\n  ) {\n    // Ignore messages from clients that are not setup yet or have disconnected\n    if (!this.state.connectedClients[connectedClientId]) {\n      return;\n    }\n\n    switch (message.type) {\n      case 'CONSOLE':\n        this.onConsoleMessageReceived(connectedClientId, message);\n        break;\n      case 'ERROR':\n        this.onErrorMessageReceived(connectedClientId, message);\n        break;\n      case 'STATUS_REPORT':\n        this.onStatusReportMessageReceived(connectedClientId, message);\n        break;\n      // @ts-ignore: CODE is echoed by pubsub, we ignore it\n      case 'CODE':\n        break;\n      // @ts-ignore: RELOAD_SNACK is echoed by pubsub, we ignore it\n      case 'RELOAD_SNACK':\n        break;\n      // @ts-ignore: REQUEST_STATUS is echoed by pubsub, we ignore it\n      case 'REQUEST_STATUS':\n        break;\n      default:\n        this.logger?.error('Invalid message received', transport, message);\n        break;\n    }\n  }\n\n  private onProtocolMessageSent(transport: string, message: ProtocolOutgoingMessage) {\n    switch (message.type) {\n      case 'CODE':\n        this.setState((state) => {\n          let { connectedClients } = state;\n          for (const connectedClientId in connectedClients) {\n            const connectedClient = connectedClients[connectedClientId];\n            if (connectedClient.transport === transport) {\n              connectedClients = State.addObject(connectedClients, connectedClientId, {\n                ...connectedClient,\n                error: undefined,\n                status: connectedClient.status === 'error' ? 'ok' : connectedClient.status,\n              });\n            }\n          }\n          return connectedClients !== state.connectedClients ? { connectedClients } : null;\n        });\n        break;\n    }\n  }\n\n  private onConsoleMessageReceived(connectedClientId: string, message: ProtocolConsoleMessage) {\n    const payload = message.payload || [];\n\n    const event: SnackLogEvent = {\n      type: message.method,\n      connectedClient: this.state.connectedClients[connectedClientId],\n      message: payload.join(' '),\n      // error?\n      // arguments: payload,\n    };\n\n    this.logListeners.forEach((listener) => listener(event));\n  }\n\n  private onErrorMessageReceived(connectedClientId: string, message: ProtocolErrorMessage) {\n    try {\n      const json = JSON.parse(message.error);\n      const error = createError({\n        name: json.name || 'Error',\n        message: json.message || '',\n        fileName: json.fileName,\n        lineNumber: json.lineNumber || json.loc?.line || json.line,\n        columnNumber: json.columnNumber || json.loc?.column || json.column,\n        stack: json.stack,\n      });\n      this.setState((state) => ({\n        connectedClients: State.addObject(state.connectedClients, connectedClientId, {\n          ...state.connectedClients[connectedClientId],\n          error,\n          status: 'error',\n        }),\n      }));\n    } catch {\n      this.logger?.error('Failed to parse received error message', message);\n    }\n  }\n\n  private onStatusReportMessageReceived(connectedClientId: string, message: ProtocolStatusMessage) {\n    const { previewLocation } = message;\n    this.setState((state) => ({\n      connectedClients: State.addObject(state.connectedClients, connectedClientId, {\n        ...state.connectedClients[connectedClientId],\n        previewURL: previewLocation,\n        previewTimestamp: Date.now(),\n      }),\n    }));\n  }\n}\n"]}